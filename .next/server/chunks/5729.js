exports.id=5729,exports.ids=[5729],exports.modules={217:(e,t,i)=>{let r=i(95484),s=i(7193),n=`
server.call('set', KEYS[1], 0, 'EX', ARGV[2], 'NX')
local consumed = server.call('incrby', KEYS[1], ARGV[1])
local ttl = server.call('pttl', KEYS[1])
return {consumed, ttl}
`;class o extends r{constructor(e){super(e),this.client=e.storeClient,this._rejectIfValkeyNotReady=!!e.rejectIfValkeyNotReady,this._incrTtlLuaScript=e.customIncrTtlLuaScript||n,this.client.defineCommand("rlflxIncr",{numberOfKeys:1,lua:this._incrTtlLuaScript})}_isValkeyReady(){return!this._rejectIfValkeyNotReady||"ready"===this.client.status}_getRateLimiterRes(e,t,i){let r,n;Array.isArray(i[0])?[[,r],[,n]]=i:[r,n]=i;let o=new s;return o.consumedPoints=+r,o.isFirstInDuration=o.consumedPoints===t,o.remainingPoints=Math.max(this.points-o.consumedPoints,0),o.msBeforeNext=n,o}_upsert(e,t,i,r=!1){if(!this._isValkeyReady())throw Error("Valkey connection is not ready");let s=Math.floor(i/1e3);if(r){let i=this.client.multi();return s>0?i.set(e,t,"EX",s):i.set(e,t),i.pttl(e).exec()}return s>0?this.client.rlflxIncr([e,String(t),String(s),String(this.points),String(this.duration)]):this.client.multi().incrby(e,t).pttl(e).exec()}_get(e){if(!this._isValkeyReady())throw Error("Valkey connection is not ready");return this.client.multi().get(e).pttl(e).exec().then(e=>{let[[,t]]=e;return null===t?null:e})}_delete(e){return this.client.del(e).then(e=>e>0)}}e.exports=o},7193:e=>{e.exports=class{constructor(e,t,i,r){this.remainingPoints=void 0===e?0:e,this.msBeforeNext=void 0===t?0:t,this.consumedPoints=void 0===i?0:i,this.isFirstInDuration=void 0!==r&&r}get msBeforeNext(){return this._msBeforeNext}set msBeforeNext(e){return this._msBeforeNext=e,this}get remainingPoints(){return this._remainingPoints}set remainingPoints(e){return this._remainingPoints=e,this}get consumedPoints(){return this._consumedPoints}set consumedPoints(e){return this._consumedPoints=e,this}get isFirstInDuration(){return this._isFirstInDuration}set isFirstInDuration(e){this._isFirstInDuration=!!e}_getDecoratedProperties(){return{remainingPoints:this.remainingPoints,msBeforeNext:this.msBeforeNext,consumedPoints:this.consumedPoints,isFirstInDuration:this.isFirstInDuration}}[Symbol.for("nodejs.util.inspect.custom")](){return this._getDecoratedProperties()}toString(){return JSON.stringify(this._getDecoratedProperties())}toJSON(){return this._getDecoratedProperties()}}},7401:(e,t,i)=>{let r=null;class s extends Error{constructor(e){super(e),this.name="RateLimiterDrizzleError"}}function n(){if(r)return r;try{let{and:e,or:t,gt:s,lt:n,eq:o,isNull:a,sql:l}=i(Object(function(){var e=Error("Cannot find module 'drizzle-orm'");throw e.code="MODULE_NOT_FOUND",e}()));return r={and:e,or:t,gt:s,lt:n,eq:o,isNull:a,sql:l}}catch(e){throw new s("drizzle-orm is not installed. Please install drizzle-orm to use RateLimiterDrizzle.")}}let o=i(95484),a=i(7193);class l extends o{constructor(e){if(super(e),!e?.schema)throw new s("Drizzle schema is required");if(!e?.storeClient)throw new s("Drizzle client is required");this.schema=e.schema,this.drizzleClient=e.storeClient,this.clearExpiredByTimeout=e.clearExpiredByTimeout??!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo()}_getRateLimiterRes(e,t,i){let r=new a;return r.isFirstInDuration=i.points===t,r.consumedPoints=i.points,r.remainingPoints=Math.max(this.points-r.consumedPoints,0),r.msBeforeNext=null!==i.expire?Math.max(new Date(i.expire).getTime()-Date.now(),0):-1,r}async _upsert(e,t,i,r=!1){if(!this.drizzleClient)return Promise.reject(new s("Drizzle client is not established"));let{eq:o,sql:a}=n(),l=new Date,c=i>0?new Date(l.getTime()+i):null;return await this.drizzleClient.transaction(async i=>{let[s]=await i.select().from(this.schema).where(o(this.schema.key,e)).limit(1),n=r||!s?.expire||s?.expire<=l||null===c,[h]=await i.insert(this.schema).values({key:e,points:t,expire:c}).onConflictDoUpdate({target:this.schema.key,set:{points:n?t:a`${this.schema.points} + ${t}`,...n&&{expire:c}}}).returning();return h})}async _get(e){if(!this.drizzleClient)return Promise.reject(new s("Drizzle client is not established"));let{and:t,or:i,gt:r,eq:o,isNull:a}=n(),[l]=await this.drizzleClient.select().from(this.schema).where(t(o(this.schema.key,e),i(r(this.schema.expire,new Date),a(this.schema.expire)))).limit(1);return l||null}async _delete(e){if(!this.drizzleClient)return Promise.reject(new s("Drizzle client is not established"));let{eq:t}=n(),[i]=await this.drizzleClient.delete(this.schema).where(t(this.schema.key,e)).returning({key:this.schema.key});return!!i?.key}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId);let{lt:e}=n();this._clearExpiredTimeoutId=setTimeout(async()=>{try{await this.drizzleClient.delete(this.schema).where(e(this.schema.expire,new Date(Date.now()-36e5)))}catch(e){console.warn("Failed to clear expired records:",e)}this._clearExpiredHourAgo()},3e5),this._clearExpiredTimeoutId.unref()}}e.exports=l},9616:(e,t,i)=>{let r=i(79073),s=i(35658),n=i(7193);class o extends r{constructor(e={}){super(e),this._memoryStorage=new s}consume(e,t=1,i={}){return new Promise((r,s)=>{let n=this.getKey(e),o=this._getKeySecDuration(i),a=this._memoryStorage.incrby(n,t,o);if(a.remainingPoints=Math.max(this.points-a.consumedPoints,0),a.consumedPoints>this.points)this.blockDuration>0&&a.consumedPoints<=this.points+t&&(a=this._memoryStorage.set(n,a.consumedPoints,this.blockDuration)),s(a);else if(this.execEvenly&&a.msBeforeNext>0&&!a.isFirstInDuration){let e=Math.ceil(a.msBeforeNext/(a.remainingPoints+2));e<this.execEvenlyMinDelayMs&&(e=a.consumedPoints*this.execEvenlyMinDelayMs),setTimeout(r,e,a)}else r(a)})}penalty(e,t=1,i={}){let r=this.getKey(e);return new Promise(e=>{let s=this._getKeySecDuration(i),n=this._memoryStorage.incrby(r,t,s);n.remainingPoints=Math.max(this.points-n.consumedPoints,0),e(n)})}reward(e,t=1,i={}){let r=this.getKey(e);return new Promise(e=>{let s=this._getKeySecDuration(i),n=this._memoryStorage.incrby(r,-t,s);n.remainingPoints=Math.max(this.points-n.consumedPoints,0),e(n)})}block(e,t){let i=1e3*t,r=this.points+1;return this._memoryStorage.set(this.getKey(e),r,t),Promise.resolve(new n(0,0===i?-1:i,r))}set(e,t,i){let r=(i>=0?i:this.duration)*1e3;return this._memoryStorage.set(this.getKey(e),t,i),Promise.resolve(new n(0,0===r?-1:r,t))}get(e){let t=this._memoryStorage.get(this.getKey(e));return null!==t&&(t.remainingPoints=Math.max(this.points-t.consumedPoints,0)),Promise.resolve(t)}delete(e){return Promise.resolve(this._memoryStorage.delete(this.getKey(e)))}}e.exports=o},10860:(e,t,i)=>{let r=i(7193);e.exports=class{constructor(e,t){this._rateLimiter=e,this._burstLimiter=t}_combineRes(e,t){return e?new r(e.remainingPoints,Math.min(e.msBeforeNext,t?t.msBeforeNext:0),e.consumedPoints,e.isFirstInDuration):null}consume(e,t=1,i={}){return this._rateLimiter.consume(e,t,i).catch(s=>s instanceof r?this._burstLimiter.consume(e,t,i).then(e=>Promise.resolve(this._combineRes(s,e))).catch(e=>e instanceof r?Promise.reject(this._combineRes(s,e)):Promise.reject(e)):Promise.reject(s))}get(e){return Promise.all([this._rateLimiter.get(e),this._burstLimiter.get(e)]).then(([e,t])=>this._combineRes(e,t))}get points(){return this._rateLimiter.points}}},11999:(e,t,i)=>{let r=i(95484),s=i(7193);class n extends r{_internalStoreType=null;constructor(e,t=null){super(e),this.client=e.storeClient,this.storeType=e.storeType||"sqlite3",this.tableName=e.tableName,this.tableCreated=e.tableCreated||!1,this.clearExpiredByTimeout=e.clearExpiredByTimeout,this._validateStoreTypes(t),this._validateStoreClient(t),this._setInternalStoreType(t),this._validateTableName(t),this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof t&&t()):this._createDbAndTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof t&&t()}).catch(e=>{if("function"==typeof t)t(e);else throw e})}_validateStoreTypes(e){let t=["sqlite3","better-sqlite3","knex"];if(!t.includes(this.storeType)){let i=Error(`storeType must be one of: ${t.join(", ")}`);if("function"==typeof e)return e(i);throw i}}_validateStoreClient(e){if("sqlite3"===this.storeType){if("function"!=typeof this.client.run){let t=Error("storeClient must be an instance of sqlite3.Database when storeType is 'sqlite3' or no storeType was provided");if("function"==typeof e)return e(t);throw t}}else if("better-sqlite3"===this.storeType){if("function"!=typeof this.client.prepare||void 0!==this.client.run){let t=Error("storeClient must be an instance of better-sqlite3.Database when storeType is 'better-sqlite3'");if("function"==typeof e)return e(t);throw t}}else if("knex"===this.storeType&&"function"!=typeof this.client.raw){let t=Error("storeClient must be an instance of Knex when storeType is 'knex'");if("function"==typeof e)return e(t);throw t}}_setInternalStoreType(e){if("knex"===this.storeType){let t=this.client.client.config.client;if("sqlite3"===t)this._internalStoreType="sqlite3";else if("better-sqlite3"===t)this._internalStoreType="better-sqlite3";else{let t=Error("Knex must be configured with 'sqlite3' or 'better-sqlite3' for RateLimiterSQLite");if("function"==typeof e)return e(t);throw t}}else this._internalStoreType=this.storeType}_validateTableName(e){if(!/^[A-Za-z0-9_]*$/.test(this.tableName)){let t=Error("Table name must contain only letters and numbers");if("function"==typeof e)return e(t);throw t}}async _getConnection(){return"knex"===this.storeType?this.client.client.acquireConnection():this.client}_releaseConnection(e){"knex"===this.storeType&&this.client.client.releaseConnection(e)}async _createDbAndTable(){let e=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":await new Promise((t,i)=>{e.run(this._getCreateTableSQL(),e=>e?i(e):t())});break;case"better-sqlite3":e.prepare(this._getCreateTableSQL()).run();break;default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(e)}}_getCreateTableSQL(){return`CREATE TABLE IF NOT EXISTS ${this.tableName} (
      key TEXT PRIMARY KEY,
      points INTEGER NOT NULL DEFAULT 0,
      expire INTEGER
    )`}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>this._clearExpiredHourAgo())},3e5),this._clearExpiredTimeoutId.unref()}async clearExpired(e){let t=`DELETE FROM ${this.tableName} WHERE expire < ?`,i=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":await new Promise((r,s)=>{i.run(t,[e],e=>e?s(e):r())});break;case"better-sqlite3":i.prepare(t).run(e);break;default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(i)}}_getRateLimiterRes(e,t,i){let r=new s;return r.isFirstInDuration=t===i.points,r.consumedPoints=r.isFirstInDuration?t:i.points,r.remainingPoints=Math.max(this.points-r.consumedPoints,0),r.msBeforeNext=i.expire?Math.max(i.expire-Date.now(),0):-1,r}async _upsertTransactionSQLite3(e,t,i){return await new Promise((r,s)=>{e.serialize(()=>{e.run("SAVEPOINT rate_limiter_trx;",n=>{if(n)return s(n);e.get(t,i,(t,i)=>{if(t)return void e.run("ROLLBACK TO SAVEPOINT rate_limiter_trx;",()=>s(t));e.run("RELEASE SAVEPOINT rate_limiter_trx;",()=>r(i))})})})})}async _upsertTransactionBetterSQLite3(e,t,i){return e.transaction(()=>e.prepare(t).get(...i))()}async _upsertTransaction(e,t,i,r){let s=Date.now(),n=i>0?s+i:null,o=r?`INSERT OR REPLACE INTO ${this.tableName} (key, points, expire) VALUES (?, ?, ?) RETURNING points, expire`:`INSERT INTO ${this.tableName} (key, points, expire)
         VALUES (?, ?, ?)
         ON CONFLICT(key) DO UPDATE SET
           points = CASE WHEN expire IS NULL OR expire > ? THEN points + excluded.points ELSE excluded.points END,
           expire = CASE WHEN expire IS NULL OR expire > ? THEN expire ELSE excluded.expire END
         RETURNING points, expire`,a=r?[e,t,n]:[e,t,n,s,s],l=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":return this._upsertTransactionSQLite3(l,o,a);case"better-sqlite3":return this._upsertTransactionBetterSQLite3(l,o,a);default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(l)}}_upsert(e,t,i,r=!1){return this.tableCreated?this._upsertTransaction(e,t,i,r):Promise.reject(Error("Table is not created yet"))}async _get(e){let t=`SELECT points, expire FROM ${this.tableName} WHERE key = ? AND (expire > ? OR expire IS NULL)`,i=Date.now(),r=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":return await new Promise((s,n)=>{r.get(t,[e,i],(e,t)=>e?n(e):s(t||null))});case"better-sqlite3":return r.prepare(t).get(e,i)||null;default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(r)}}async _delete(e){if(!this.tableCreated)return Promise.reject(Error("Table is not created yet"));let t=`DELETE FROM ${this.tableName} WHERE key = ?`,i=await this._getConnection();try{switch(this._internalStoreType){case"sqlite3":return await new Promise((r,s)=>{i.run(t,[e],function(e){e?s(e):r(this.changes>0)})});case"better-sqlite3":return i.prepare(t).run(e).changes>0;default:throw Error("Unsupported internalStoreType")}}finally{this._releaseConnection(i)}}}e.exports=n},23898:(e,t,i)=>{e.exports=i(95734)},27349:(e,t,i)=>{let r=i(27172),s=i(55511),n=i(79073),o=i(9616),a=i(7193),l="rate_limiter_flexible",c=null,h=function(e,t,i,r){let s;s=null===r||!0===r||!1===r?r:{remainingPoints:r.remainingPoints,msBeforeNext:r.msBeforeNext,consumedPoints:r.consumedPoints,isFirstInDuration:r.isFirstInDuration},e.send({channel:l,keyPrefix:t.keyPrefix,promiseId:t.promiseId,type:i,data:s})},u=function(e){setTimeout(()=>{this._initiated?process.send(e):void 0!==this._promises[e.promiseId]&&u.call(this,e)},30)},m=function(e,t,i,r,s){let n={channel:l,keyPrefix:this.keyPrefix,func:e,promiseId:t,data:{key:i,arg:r,opts:s}};this._initiated?process.send(n):u.call(this,n)},d=function(e,t){let i;if(!t||t.channel!==l||void 0===this._rateLimiters[t.keyPrefix])return!1;switch(t.func){case"consume":i=this._rateLimiters[t.keyPrefix].consume(t.data.key,t.data.arg,t.data.opts);break;case"penalty":i=this._rateLimiters[t.keyPrefix].penalty(t.data.key,t.data.arg,t.data.opts);break;case"reward":i=this._rateLimiters[t.keyPrefix].reward(t.data.key,t.data.arg,t.data.opts);break;case"block":i=this._rateLimiters[t.keyPrefix].block(t.data.key,t.data.arg,t.data.opts);break;case"get":i=this._rateLimiters[t.keyPrefix].get(t.data.key,t.data.opts);break;case"delete":i=this._rateLimiters[t.keyPrefix].delete(t.data.key,t.data.opts);break;default:return!1}i&&i.then(i=>{h(e,t,"resolve",i)}).catch(i=>{h(e,t,"reject",i)})},p=function(e){if(!e||e.channel!==l||e.keyPrefix!==this.keyPrefix)return!1;if(this._promises[e.promiseId]){let t;switch(clearTimeout(this._promises[e.promiseId].timeoutId),t=null===e.data||!0===e.data||!1===e.data?e.data:new a(e.data.remainingPoints,e.data.msBeforeNext,e.data.consumedPoints,e.data.isFirstInDuration),e.type){case"resolve":this._promises[e.promiseId].resolve(t);break;case"reject":this._promises[e.promiseId].reject(t);break;default:throw Error(`RateLimiterCluster: no such message type '${e.type}'`)}delete this._promises[e.promiseId]}},y=function(){return{points:this.points,duration:this.duration,blockDuration:this.blockDuration,execEvenly:this.execEvenly,execEvenlyMinDelayMs:this.execEvenlyMinDelayMs,keyPrefix:this.keyPrefix}},_=function(e,t){let i=process.hrtime(),r=i[0].toString()+i[1].toString();return void 0!==this._promises[r]&&(r+=s.randomBytes(12).toString("base64")),this._promises[r]={resolve:e,reject:t,timeoutId:setTimeout(()=>{delete this._promises[r],t(Error("RateLimiterCluster timeout: no answer from master in time"))},this.timeoutMs)},r};class x{constructor(){if(c)return c;this._rateLimiters={},r.setMaxListeners(0),r.on("message",(e,t)=>{t&&t.channel===l&&"init"===t.type?(void 0===this._rateLimiters[t.opts.keyPrefix]&&(this._rateLimiters[t.opts.keyPrefix]=new o(t.opts)),e.send({channel:l,type:"init",keyPrefix:t.opts.keyPrefix})):d.call(this,e,t)}),c=this}}class f{constructor(e){if(c)return c;this._rateLimiters={},e.launchBus((t,i)=>{i.on("process:msg",t=>{let i=t.raw;i&&i.channel===l&&"init"===i.type?(void 0===this._rateLimiters[i.opts.keyPrefix]&&(this._rateLimiters[i.opts.keyPrefix]=new o(i.opts)),e.sendDataToProcessId(t.process.pm_id,{data:{},topic:l,channel:l,type:"init",keyPrefix:i.opts.keyPrefix},(e,t)=>{e&&console.log(e,t)})):d.call(this,{send:i=>{i.topic=l,void 0===i.data&&(i.data={}),e.sendDataToProcessId(t.process.pm_id,i,(e,t)=>{e&&console.log(e,t)})}},i)})}),c=this}}class g extends n{get timeoutMs(){return this._timeoutMs}set timeoutMs(e){this._timeoutMs=void 0===e?5e3:Math.abs(parseInt(e))}constructor(e={}){super(e),process.setMaxListeners(0),this.timeoutMs=e.timeoutMs,this._initiated=!1,process.on("message",e=>{e&&e.channel===l&&"init"===e.type&&e.keyPrefix===this.keyPrefix?this._initiated=!0:p.call(this,e)}),process.send({channel:l,type:"init",opts:y.call(this)}),this._promises={}}consume(e,t=1,i={}){return new Promise((r,s)=>{let n=_.call(this,r,s);m.call(this,"consume",n,e,t,i)})}penalty(e,t=1,i={}){return new Promise((r,s)=>{let n=_.call(this,r,s);m.call(this,"penalty",n,e,t,i)})}reward(e,t=1,i={}){return new Promise((r,s)=>{let n=_.call(this,r,s);m.call(this,"reward",n,e,t,i)})}block(e,t,i={}){return new Promise((r,s)=>{let n=_.call(this,r,s);m.call(this,"block",n,e,t,i)})}get(e,t={}){return new Promise((i,r)=>{let s=_.call(this,i,r);m.call(this,"get",s,e,t)})}delete(e,t={}){return new Promise((i,r)=>{let s=_.call(this,i,r);m.call(this,"delete",s,e,t)})}}e.exports={RateLimiterClusterMaster:x,RateLimiterClusterMasterPM2:f,RateLimiterCluster:g}},28725:(e,t,i)=>{let r=i(7193),s=i(95484);class n{constructor(e,t,i){this.key=e,this.points=t,this.expire=i}}class o extends s{constructor(e,t=null){super(e),this.client=e.storeClient,this.tableName=e.tableName,this.tableCreated=e.tableCreated,this.ttlManuallySet=e.ttlSet,this.tableCreated?this._setTTL().finally(()=>{"function"==typeof t&&t()}):this._createTable(e.dynamoTableOpts).then(e=>{this.tableCreated=!0,this._setTTL().finally(()=>{"function"==typeof t&&t()})}).catch(e=>{if("function"==typeof t)t(e);else throw e})}get tableName(){return this._tableName}set tableName(e){this._tableName=void 0===e?"node-rate-limiter-flexible":e}get tableCreated(){return this._tableCreated}set tableCreated(e){this._tableCreated=void 0!==e&&!!e}async _createTable(e){let t={TableName:this.tableName,AttributeDefinitions:[{AttributeName:"key",AttributeType:"S"}],KeySchema:[{AttributeName:"key",KeyType:"HASH"}],ProvisionedThroughput:{ReadCapacityUnits:e&&e.readCapacityUnits?e.readCapacityUnits:25,WriteCapacityUnits:e&&e.writeCapacityUnits?e.writeCapacityUnits:25}};try{return await this.client.createTable(t)}catch(e){if(e.__type&&e.__type.includes("ResourceInUseException"))return null;throw e}}async _get(e){if(!this.tableCreated)throw Error("Table is not created yet");let t={TableName:this.tableName,Key:{key:{S:e}}},i=await this.client.getItem(t);return i.Item?new n(i.Item.key.S,Number(i.Item.points.N),Number(i.Item.expire.N)):null}async _delete(e){if(!this.tableCreated)throw Error("Table is not created yet");let t={TableName:this.tableName,Key:{key:{S:e}},ConditionExpression:"attribute_exists(#k)",ExpressionAttributeNames:{"#k":"key"}};try{let e=await this._client.deleteItem(t);return 200===e.$metadata.httpStatusCode}catch(e){if(e.__type&&e.__type.includes("ConditionalCheckFailedException"))return!1;throw e}}async _upsert(e,t,i,r=!1,s={}){if(!this.tableCreated)throw Error("Table is not created yet");let n=Date.now(),o=n/1e3,a=i>0?(n+i)/1e3:-1;if(r)return await this._baseUpsert({TableName:this.tableName,Key:{key:{S:e}},UpdateExpression:"SET points = :points, expire = :expire",ExpressionAttributeValues:{":points":{N:t.toString()},":expire":{N:a.toString()}},ReturnValues:"ALL_NEW"});try{return await this._baseUpsert({TableName:this.tableName,Key:{key:{S:e}},UpdateExpression:"SET points = :new_points, expire = :new_expire",ExpressionAttributeValues:{":new_points":{N:t.toString()},":new_expire":{N:a.toString()},":where_expire":{N:o.toString()}},ConditionExpression:"expire <= :where_expire OR attribute_not_exists(points)",ReturnValues:"ALL_NEW"})}catch(i){return await this._baseUpsert({TableName:this.tableName,Key:{key:{S:e}},UpdateExpression:"SET points = points + :new_points",ExpressionAttributeValues:{":new_points":{N:t.toString()},":where_expire":{N:o.toString()}},ConditionExpression:"expire > :where_expire",ReturnValues:"ALL_NEW"})}}async _baseUpsert(e){if(!this.tableCreated)throw Error("Table is not created yet");try{let t=await this.client.updateItem(e);return new n(t.Attributes.key.S,Number(t.Attributes.points.N),Number(t.Attributes.expire.N))}catch(e){throw e}}async _setTTL(){if(!this.tableCreated)throw Error("Table is not created yet");try{if(await this._isTTLSet())return;let e={TableName:this.tableName,TimeToLiveSpecification:{AttributeName:"expire",Enabled:!0}};return await this.client.updateTimeToLive(e)}catch(e){throw e}}async _isTTLSet(){if(!this.tableCreated)throw Error("Table is not created yet");if(this.ttlManuallySet)return!0;try{let e=await this.client.describeTimeToLive({TableName:this.tableName});return 200==e.$metadata.httpStatusCode&&"ENABLED"===e.TimeToLiveDescription.TimeToLiveStatus&&"expire"===e.TimeToLiveDescription.AttributeName}catch(e){throw e}}_getRateLimiterRes(e,t,i){let s=new r;return s.isFirstInDuration=t===i.points,s.consumedPoints=s.isFirstInDuration?t:i.points,s.remainingPoints=Math.max(this.points-s.consumedPoints,0),s.msBeforeNext=-1!=i.expire?Math.max(1e3*i.expire-Date.now(),0):-1,s}}e.exports=o},34441:(e,t,i)=>{let r=i(95484),s=i(7193);class n extends r{constructor(e,t=null){super(e),this.client=e.storeClient,this.clientType=e.storeType,this.dbName=e.dbName,this.tableName=e.tableName,this.clearExpiredByTimeout=e.clearExpiredByTimeout,this.tableCreated=e.tableCreated,this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof t&&t()):this._createDbAndTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof t&&t()}).catch(e=>{if("function"==typeof t)t(e);else throw e})}clearExpired(e){return new Promise(t=>{this._getConnection().then(i=>{i.query("DELETE FROM ??.?? WHERE expire < ?",[this.dbName,this.tableName,e],()=>{this._releaseConnection(i),t()})}).catch(()=>{t()})})}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>{this._clearExpiredHourAgo()})},3e5),this._clearExpiredTimeoutId.unref()}_getConnection(){switch(this.clientType){case"pool":return new Promise((e,t)=>{this.client.getConnection((i,r)=>{if(i)return t(i);e(r)})});case"sequelize":return this.client.connectionManager.getConnection();case"knex":return this.client.client.acquireConnection();default:return Promise.resolve(this.client)}}_releaseConnection(e){switch(this.clientType){case"pool":return e.release();case"sequelize":return this.client.connectionManager.releaseConnection(e);case"knex":return this.client.client.releaseConnection(e);default:return!0}}_createDbAndTable(){return new Promise((e,t)=>{this._getConnection().then(i=>{i.query(`CREATE DATABASE IF NOT EXISTS \`${this.dbName}\`;`,r=>{if(r)return this._releaseConnection(i),t(r);i.query(this._getCreateTableStmt(),r=>{if(r)return this._releaseConnection(i),t(r);this._releaseConnection(i),e()})})}).catch(e=>{t(e)})})}_getCreateTableStmt(){return`CREATE TABLE IF NOT EXISTS \`${this.dbName}\`.\`${this.tableName}\` (\`key\` VARCHAR(255) CHARACTER SET utf8 NOT NULL,\`points\` INT(9) NOT NULL default 0,\`expire\` BIGINT UNSIGNED,PRIMARY KEY (\`key\`)) ENGINE = INNODB;`}get clientType(){return this._clientType}set clientType(e){if(void 0===e)if("Connection"===this.client.constructor.name)e="connection";else if("Pool"===this.client.constructor.name)e="pool";else if("Sequelize"===this.client.constructor.name)e="sequelize";else throw Error("storeType is not defined");this._clientType=e.toLowerCase()}get dbName(){return this._dbName}set dbName(e){this._dbName=void 0===e?"rtlmtrflx":e}get tableName(){return this._tableName}set tableName(e){this._tableName=void 0===e?this.keyPrefix:e}get tableCreated(){return this._tableCreated}set tableCreated(e){this._tableCreated=void 0!==e&&!!e}get clearExpiredByTimeout(){return this._clearExpiredByTimeout}set clearExpiredByTimeout(e){this._clearExpiredByTimeout=void 0===e||!!e}_getRateLimiterRes(e,t,i){let r=new s,[n]=i;return r.isFirstInDuration=t===n.points,r.consumedPoints=r.isFirstInDuration?t:n.points,r.remainingPoints=Math.max(this.points-r.consumedPoints,0),r.msBeforeNext=n.expire?Math.max(n.expire-Date.now(),0):-1,r}_upsertTransaction(e,t,i,r,s){return new Promise((n,o)=>{e.query("BEGIN",a=>{let l,c;if(a)return e.rollback(),o(a);let h=Date.now(),u=r>0?h+r:null;s?(l=`INSERT INTO ??.?? VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
            points = ?, 
            expire = ?;`,c=[this.dbName,this.tableName,t,i,u,i,u]):(l=`INSERT INTO ??.?? VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
            points = IF(expire <= ?, ?, points + (?)), 
            expire = IF(expire <= ?, ?, expire);`,c=[this.dbName,this.tableName,t,i,u,h,i,i,h,u]),e.query(l,c,i=>{if(i)return e.rollback(),o(i);e.query("SELECT points, expire FROM ??.?? WHERE `key` = ?;",[this.dbName,this.tableName,t],(t,i)=>{if(t)return e.rollback(),o(t);e.query("COMMIT",t=>{if(t)return e.rollback(),o(t);n(i)})})})})})}_upsert(e,t,i,r=!1){return this.tableCreated?new Promise((s,n)=>{this._getConnection().then(o=>{this._upsertTransaction(o,e,t,i,r).then(e=>{s(e),this._releaseConnection(o)}).catch(e=>{n(e),this._releaseConnection(o)})}).catch(e=>{n(e)})}):Promise.reject(Error("Table is not created yet"))}_get(e){return this.tableCreated?new Promise((t,i)=>{this._getConnection().then(r=>{r.query("SELECT points, expire FROM ??.?? WHERE `key` = ? AND (`expire` > ? OR `expire` IS NULL)",[this.dbName,this.tableName,e,Date.now()],(e,s)=>{e?i(e):0===s.length?t(null):t(s),this._releaseConnection(r)})}).catch(e=>{i(e)})}):Promise.reject(Error("Table is not created yet"))}_delete(e){return this.tableCreated?new Promise((t,i)=>{this._getConnection().then(r=>{r.query("DELETE FROM ??.?? WHERE `key` = ?",[this.dbName,this.tableName,e],(e,s)=>{e?i(e):t(s.affectedRows>0),this._releaseConnection(r)})}).catch(e=>{i(e)})}):Promise.reject(Error("Table is not created yet"))}}e.exports=n},35658:(e,t,i)=>{let r=i(60877),s=i(7193);e.exports=class{constructor(){this._storage={}}incrby(e,t,i){if(this._storage[e]){let i=this._storage[e].expiresAt?this._storage[e].expiresAt.getTime()-new Date().getTime():-1;if(!this._storage[e].expiresAt||i>0)return this._storage[e].value=this._storage[e].value+t,new s(0,i,this._storage[e].value,!1)}return this.set(e,t,i)}set(e,t,i){let n=1e3*i;return this._storage[e]&&this._storage[e].timeoutId&&clearTimeout(this._storage[e].timeoutId),this._storage[e]=new r(t,n>0?new Date(Date.now()+n):null),n>0&&(this._storage[e].timeoutId=setTimeout(()=>{delete this._storage[e]},n),this._storage[e].timeoutId.unref&&this._storage[e].timeoutId.unref()),new s(0,0===n?-1:n,this._storage[e].value,!0)}get(e){return this._storage[e]?new s(0,this._storage[e].expiresAt?this._storage[e].expiresAt.getTime()-new Date().getTime():-1,this._storage[e].value,!1):null}delete(e){return!!this._storage[e]&&(this._storage[e].timeoutId&&clearTimeout(this._storage[e].timeoutId),delete this._storage[e],!0)}}},36558:e=>{e.exports=class extends Error{constructor(e){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="RateLimiterSetupError",this.message=e}}},42283:(e,t,i)=>{let r=i(7193);e.exports=class{constructor(e={}){this.limiter=e.limiter,this.blackList=e.blackList,this.whiteList=e.whiteList,this.isBlackListed=e.isBlackListed,this.isWhiteListed=e.isWhiteListed,this.runActionAnyway=e.runActionAnyway}get limiter(){return this._limiter}set limiter(e){if(void 0===e)throw Error("limiter is not set");this._limiter=e}get runActionAnyway(){return this._runActionAnyway}set runActionAnyway(e){this._runActionAnyway=void 0!==e&&e}get blackList(){return this._blackList}set blackList(e){this._blackList=Array.isArray(e)?e:[]}get isBlackListed(){return this._isBlackListed}set isBlackListed(e){if(void 0===e&&(e=()=>!1),"function"!=typeof e)throw Error("isBlackListed must be function");this._isBlackListed=e}get whiteList(){return this._whiteList}set whiteList(e){this._whiteList=Array.isArray(e)?e:[]}get isWhiteListed(){return this._isWhiteListed}set isWhiteListed(e){if(void 0===e&&(e=()=>!1),"function"!=typeof e)throw Error("isWhiteListed must be function");this._isWhiteListed=e}isBlackListedSomewhere(e){return this.blackList.indexOf(e)>=0||this.isBlackListed(e)}isWhiteListedSomewhere(e){return this.whiteList.indexOf(e)>=0||this.isWhiteListed(e)}getBlackRes(){return new r(0,Number.MAX_SAFE_INTEGER,0,!1)}getWhiteRes(){return new r(Number.MAX_SAFE_INTEGER,0,0,!1)}rejectBlack(){return Promise.reject(this.getBlackRes())}resolveBlack(){return Promise.resolve(this.getBlackRes())}resolveWhite(){return Promise.resolve(this.getWhiteRes())}consume(e,t=1){let i;return(this.isWhiteListedSomewhere(e)?i=this.resolveWhite():this.isBlackListedSomewhere(e)&&(i=this.rejectBlack()),void 0===i)?this.limiter.consume(e,t):(this.runActionAnyway&&this.limiter.consume(e,t).catch(()=>{}),i)}block(e,t){let i;return(this.isWhiteListedSomewhere(e)?i=this.resolveWhite():this.isBlackListedSomewhere(e)&&(i=this.resolveBlack()),void 0===i)?this.limiter.block(e,t):(this.runActionAnyway&&this.limiter.block(e,t).catch(()=>{}),i)}penalty(e,t){let i;return(this.isWhiteListedSomewhere(e)?i=this.resolveWhite():this.isBlackListedSomewhere(e)&&(i=this.resolveBlack()),void 0===i)?this.limiter.penalty(e,t):(this.runActionAnyway&&this.limiter.penalty(e,t).catch(()=>{}),i)}reward(e,t){let i;return(this.isWhiteListedSomewhere(e)?i=this.resolveWhite():this.isBlackListedSomewhere(e)&&(i=this.resolveBlack()),void 0===i)?this.limiter.reward(e,t):(this.runActionAnyway&&this.limiter.reward(e,t).catch(()=>{}),i)}get(e){let t;return(this.isWhiteListedSomewhere(e)?t=this.resolveWhite():this.isBlackListedSomewhere(e)&&(t=this.resolveBlack()),void 0===t||this.runActionAnyway)?this.limiter.get(e):t}delete(e){return this.limiter.delete(e)}}},55472:(e,t,i)=>{let r=i(95484),s=i(7193);class n extends r{constructor(e){super(e),this.client=e.storeClient,this._rejectIfRedisNotReady=!!e.rejectIfRedisNotReady,this._incrTtlLuaScript=e.customIncrTtlLuaScript||"redis.call('set', KEYS[1], 0, 'EX', ARGV[2], 'NX') local consumed = redis.call('incrby', KEYS[1], ARGV[1]) local ttl = redis.call('pttl', KEYS[1]) if ttl == -1 then   redis.call('expire', KEYS[1], ARGV[2])   ttl = 1000 * ARGV[2] end return {consumed, ttl} ",this.useRedisPackage=e.useRedisPackage||"Commander"===this.client.constructor.name||!1,this.useRedis3AndLowerPackage=e.useRedis3AndLowerPackage,"function"==typeof this.client.defineCommand&&this.client.defineCommand("rlflxIncr",{numberOfKeys:1,lua:this._incrTtlLuaScript})}_isRedisReady(){return!this._rejectIfRedisNotReady||(!this.client.status||"ready"===this.client.status)&&("function"!=typeof this.client.isReady||!!this.client.isReady())}_getRateLimiterRes(e,t,i){let[r,n]=i;Array.isArray(r)&&([,r]=r,[,n]=n);let o=new s;return o.consumedPoints=parseInt(r),o.isFirstInDuration=o.consumedPoints===t,o.remainingPoints=Math.max(this.points-o.consumedPoints,0),o.msBeforeNext=n,o}async _upsert(e,t,i,r=!1){if("string"==typeof t){if(!RegExp("^[1-9][0-9]*$").test(t))throw Error("Consuming string different than integer values is not supported by this package")}else if(!Number.isInteger(t))throw Error("Consuming decimal number of points is not supported by this package");if(!this._isRedisReady())throw Error("Redis connection is not ready");let s=Math.floor(i/1e3),n=this.client.multi();return r?(s>0?this.useRedisPackage||this.useRedis3AndLowerPackage?n.set(e,t,{EX:s}):n.set(e,t,"EX",s):n.set(e,t),this.useRedisPackage||this.useRedis3AndLowerPackage)?n.pTTL(e).exec(!0):n.pttl(e).exec(!0):s>0?this.useRedisPackage||this.useRedis3AndLowerPackage?this.useRedis3AndLowerPackage?new Promise((i,r)=>{let n=function(e,t){return e?r(e):i(t)};"function"==typeof this.client.rlflxIncr?this.client.rlflxIncr(e,t,s,this.points,this.duration,n):this.client.eval(this._incrTtlLuaScript,1,e,t,s,this.points,this.duration,n)}):this.client.eval(this._incrTtlLuaScript,{keys:[e],arguments:[String(t),String(s),String(this.points),String(this.duration)]}):this.client.rlflxIncr([e].concat([String(t),String(s),String(this.points),String(this.duration)])):this.useRedisPackage||this.useRedis3AndLowerPackage?n.incrBy(e,t).pTTL(e).exec(!0):n.incrby(e,t).pttl(e).exec(!0)}async _get(e){if(!this._isRedisReady())throw Error("Redis connection is not ready");return this.useRedisPackage||this.useRedis3AndLowerPackage?this.client.multi().get(e).pTTL(e).exec(!0).then(e=>{let[t]=e;return null===t?null:e}):this.client.multi().get(e).pttl(e).exec().then(e=>{let[[,t]]=e;return null===t?null:e})}_delete(e){return this.client.del(e).then(e=>e>0)}}e.exports=n},55729:(e,t,i)=>{let r=i(55472),s=i(77259),n=i(34441),o=i(89364),{RateLimiterClusterMaster:a,RateLimiterClusterMasterPM2:l,RateLimiterCluster:c}=i(27349),h=i(9616),u=i(95654),m=i(42283),d=i(87724),p=i(98836),y=i(10860),_=i(7193),x=i(28725),f=i(69439),g=i(7401),E=i(217),b=i(67860),w=i(11999);e.exports={RateLimiterRedis:r,RateLimiterMongo:s,RateLimiterMySQL:n,RateLimiterPostgres:o,RateLimiterMemory:h,RateLimiterMemcache:u,RateLimiterClusterMaster:a,RateLimiterClusterMasterPM2:l,RateLimiterCluster:c,RLWrapperBlackAndWhite:m,RateLimiterUnion:d,RateLimiterQueue:p,BurstyRateLimiter:y,RateLimiterRes:_,RateLimiterDynamo:x,RateLimiterPrisma:f,RateLimiterValkey:E,RateLimiterValkeyGlide:b,RateLimiterSQLite:w,RateLimiterEtcd:i(98777),RateLimiterDrizzle:g,RateLimiterEtcdNonAtomic:i(62527)}},60877:e=>{e.exports=class{constructor(e,t,i=null){this.value=e,this.expiresAt=t,this.timeoutId=i}get value(){return this._value}set value(e){this._value=parseInt(e)}get expiresAt(){return this._expiresAt}set expiresAt(e){!(e instanceof Date)&&Number.isInteger(e)&&(e=new Date(e)),this._expiresAt=e}get timeoutId(){return this._timeoutId}set timeoutId(e){this._timeoutId=e}}},62527:(e,t,i)=>{let r=i(95484),s=i(7193),n=i(36558);class o extends r{constructor(e){if(super(e),!e.storeClient)throw new n('You need to set the option "storeClient" to an instance of class "Etcd3".');this.client=e.storeClient}_getRateLimiterRes(e,t,i){let r=new s;return r.isFirstInDuration=t===i.points,r.consumedPoints=r.isFirstInDuration?t:i.points,r.remainingPoints=Math.max(this.points-r.consumedPoints,0),r.msBeforeNext=i.expire?Math.max(i.expire-Date.now(),0):-1,r}async _upsert(e,t,i,r=!1){let s=i>0?Date.now()+i:null,n={points:t,expire:s};if(r)await this.client.put(e).value(JSON.stringify(n));else{let i=await this._get(e);n={points:(null!==i?i.points:0)+t,expire:s},await this.client.put(e).value(JSON.stringify(n))}return n}async _get(e){return this.client.get(e).string().then(e=>null!==e?JSON.parse(e):null)}async _delete(e){return this.client.delete().key(e).then(e=>"1"===e.deleted)}}e.exports=o},67860:(e,t,i)=>{let r=i(95484),s=i(7193),n=`local key = KEYS[1]
local pointsToConsume = tonumber(ARGV[1])
if tonumber(ARGV[2]) > 0 then
  server.call('set', key, "0", 'EX', ARGV[2], 'NX')
  local consumed = server.call('incrby', key, pointsToConsume)
  local pttl = server.call('pttl', key)
  return {consumed, pttl}
end
local consumed = server.call('incrby', key, pointsToConsume)
local pttl = server.call('pttl', key)
return {consumed, pttl}`,o=`local key = KEYS[1]
local value = server.call('get', key)
if value == nil then
  return value
end
local pttl = server.call('pttl', key)
return {tonumber(value), pttl}`;class a extends r{constructor(e){super(e),this.client=e.storeClient,this._scriptLoaded=!1,this._getScriptLoaded=!1,this._rejectIfValkeyNotReady=!!e.rejectIfValkeyNotReady,this._luaScript=e.customFunction||n,this._libraryName=e.customFunctionLibName||"ratelimiterflexible"}async _loadScripts(){if(this._scriptLoaded&&this._getScriptLoaded)return!0;if(!this.client)throw Error("Valkey client is not set");let e=[];if(this._scriptLoaded)e.push(Promise.resolve(this._libraryName));else{let t=Buffer.from(`#!lua name=${this._libraryName}
        local function consume(KEYS, ARGV)
          ${this._luaScript.trim()}
        end
        server.register_function('consume', consume)`);e.push(this.client.functionLoad(t,{replace:!0}))}if(this._getScriptLoaded)e.push(Promise.resolve("ratelimiter_get"));else{let t=Buffer.from(`#!lua name=ratelimiter_get
        local function getValue(KEYS, ARGV)
          ${o.trim()}
        end
        server.register_function('getValue', getValue)`);e.push(this.client.functionLoad(t,{replace:!0}))}let t=await Promise.all(e);if(this._scriptLoaded=t[0]===this._libraryName,this._getScriptLoaded="ratelimiter_get"===t[1],!this._scriptLoaded||!this._getScriptLoaded)throw Error("Valkey connection is not ready, scripts not loaded");return!0}async _upsert(e,t,i,r=!1,s={}){await this._loadScripts();let n=Math.floor(i/1e3);return r?n>0?(await this.client.set(e,String(t),{expiry:{type:"EX",count:n}}),[t,1e3*n]):(await this.client.set(e,String(t)),[t,-1]):await this.client.fcall("consume",[e],[String(t),String(n)])}async _get(e,t={}){await this._loadScripts();let i=await this.client.fcall("getValue",[e],[]);return i.length>0?i:null}async _delete(e,t={}){return await this.client.del([e])>0}_getRateLimiterRes(e,t,i){if(null===i)return null;let r=new s,[n,o]=i,a=Number(n);return r.isFirstInDuration=a===t,r.consumedPoints=a,r.remainingPoints=Math.max(this.points-r.consumedPoints,0),r.msBeforeNext=o,r}async close(){if(this._scriptLoaded&&(await this.client.functionDelete(this._libraryName),this._scriptLoaded=!1),this._getScriptLoaded&&(await this.client.functionDelete("ratelimiter_get"),this._getScriptLoaded=!1),this.insuranceLimiter)try{await this.insuranceLimiter.close()}catch(e){}this.client=null,this._scriptLoaded=!1,this._getScriptLoaded=!1,this._rejectIfValkeyNotReady=!1,this._luaScript=null,this._libraryName=null,this.insuranceLimiter=null}}e.exports=a},69439:(e,t,i)=>{let r=i(95484),s=i(7193);class n extends r{constructor(e){if(super(e),this.modelName=e.tableName||"RateLimiterFlexible",this.prismaClient=e.storeClient,this.clearExpiredByTimeout=e.clearExpiredByTimeout||!0,!this.prismaClient)throw Error("Prisma client is not provided");this.clearExpiredByTimeout&&this._clearExpiredHourAgo()}_getRateLimiterRes(e,t,i){let r=new s;return r.isFirstInDuration=i.points===t,r.consumedPoints=i.points,r.remainingPoints=Math.max(this.points-r.consumedPoints,0),r.msBeforeNext=null!==i.expire?Math.max(new Date(i.expire).getTime()-Date.now(),0):-1,r}_upsert(e,t,i,r=!1){if(!this.prismaClient)return Promise.reject(Error("Prisma client is not established"));let s=new Date,n=i>0?new Date(s.getTime()+i):null;return this.prismaClient.$transaction(async i=>{let o=await i[this.modelName].findFirst({where:{key:e}});if(!o)return i[this.modelName].create({data:{key:e,points:t,expire:n}});{let a=r||!o.expire||o.expire<=s||null===n;return i[this.modelName].update({where:{key:e},data:{points:a?t:o.points+t,...a&&{expire:n}}})}})}_get(e){return this.prismaClient?this.prismaClient[this.modelName].findFirst({where:{AND:[{key:e},{OR:[{expire:{gt:new Date}},{expire:null}]}]}}):Promise.reject(Error("Prisma client is not established"))}_delete(e){return this.prismaClient?this.prismaClient[this.modelName].deleteMany({where:{key:e}}).then(e=>e.count>0):Promise.reject(Error("Prisma client is not established"))}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(async()=>{await this.prismaClient[this.modelName].deleteMany({where:{expire:{lt:new Date(Date.now()-36e5)}}}),this._clearExpiredHourAgo()},3e5),this._clearExpiredTimeoutId.unref()}}e.exports=n},73856:e=>{e.exports=class extends Error{constructor(e){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="RateLimiterEtcdTransactionFailedError",this.message=e}}},77259:(e,t,i)=>{let r=i(95484),s=i(7193);function n(e){try{let t=e.client?e.client:e,i=[0,0,0];if(void 0===t.topology){let{version:e}=t.options.metadata.driver;i=e.split("|",1)[0].split(".").map(e=>parseInt(e))}else{let{version:e}=t.topology.s.options.metadata.driver;i=e.split(".").map(e=>parseInt(e))}return{major:i[0],feature:i[1],patch:i[2]}}catch(e){return{major:0,feature:0,patch:0}}}class o extends r{constructor(e){super(e),this.dbName=e.dbName,this.tableName=e.tableName,this.indexKeyPrefix=e.indexKeyPrefix,e.mongo?this.client=e.mongo:this.client=e.storeClient,"function"==typeof this.client.then?this.client.then(e=>{this.client=e,this._initCollection(),this._driverVersion=n(this.client)}):(this._initCollection(),this._driverVersion=n(this.client))}get dbName(){return this._dbName}set dbName(e){this._dbName=void 0===e?o.getDbName():e}static getDbName(){return"node-rate-limiter-flexible"}get tableName(){return this._tableName}set tableName(e){this._tableName=void 0===e?this.keyPrefix:e}get client(){return this._client}set client(e){if(void 0===e)throw Error("mongo is not set");this._client=e}get indexKeyPrefix(){return this._indexKeyPrefix}set indexKeyPrefix(e){this._indexKeyPrefix=e||{}}_initCollection(){let e=("function"==typeof this.client.db?this.client.db(this.dbName):this.client).collection(this.tableName);e.createIndex({expire:-1},{expireAfterSeconds:0}),e.createIndex(Object.assign({},this.indexKeyPrefix,{key:1}),{unique:!0}),this._collection=e}_getRateLimiterRes(e,t,i){let r,n=new s;return n.isFirstInDuration=(r=void 0===i.value?i:i.value).points===t,n.consumedPoints=r.points,n.remainingPoints=Math.max(this.points-n.consumedPoints,0),n.msBeforeNext=null!==r.expire?Math.max(new Date(r.expire).getTime()-Date.now(),0):-1,n}_upsert(e,t,i,r=!1,s={}){let n,o;if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));let a=s.attrs||{};r?(n=Object.assign(n={key:e},a),(o={$set:{key:e,points:t,expire:i>0?new Date(Date.now()+i):null}}).$set=Object.assign(o.$set,a)):(n=Object.assign(n={$or:[{expire:{$gt:new Date}},{expire:{$eq:null}}],key:e},a),(o={$setOnInsert:{key:e,expire:i>0?new Date(Date.now()+i):null},$inc:{points:t}}).$setOnInsert=Object.assign(o.$setOnInsert,a));let l={upsert:!0};return this._driverVersion.major>=4||3===this._driverVersion.major&&this._driverVersion.feature>=7||this._driverVersion.feature>=6&&this._driverVersion.patch>=7?l.returnDocument="after":l.returnOriginal=!1,new Promise((s,c)=>{this._collection.findOneAndUpdate(n,o,l).then(e=>{s(e)}).catch(n=>{if(n&&11e3===n.code){let n=Object.assign({$or:[{expire:{$lte:new Date}},{expire:{$eq:null}}],key:e},a),o={$set:Object.assign({key:e,points:t,expire:i>0?new Date(Date.now()+i):null},a)};this._collection.findOneAndUpdate(n,o,l).then(e=>{s(e)}).catch(n=>{n&&11e3===n.code?this._upsert(e,t,i,r).then(e=>s(e)).catch(e=>c(e)):c(n)})}else c(n)})})}_get(e,t={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));let i=t.attrs||{},r=Object.assign({key:e,$or:[{expire:{$gt:new Date}},{expire:{$eq:null}}]},i);return this._collection.findOne(r)}_delete(e,t={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));let i=Object.assign({key:e},t.attrs||{});return this._collection.deleteOne(i).then(e=>e.deletedCount>0)}}e.exports=o},79073:e=>{e.exports=class{constructor(e={}){this.points=e.points,this.duration=e.duration,this.blockDuration=e.blockDuration,this.execEvenly=e.execEvenly,this.execEvenlyMinDelayMs=e.execEvenlyMinDelayMs,this.keyPrefix=e.keyPrefix}get points(){return this._points}set points(e){this._points=e>=0?e:4}get duration(){return this._duration}set duration(e){this._duration=void 0===e?1:e}get msDuration(){return 1e3*this.duration}get blockDuration(){return this._blockDuration}set blockDuration(e){this._blockDuration=void 0===e?0:e}get msBlockDuration(){return 1e3*this.blockDuration}get execEvenly(){return this._execEvenly}set execEvenly(e){this._execEvenly=void 0!==e&&!!e}get execEvenlyMinDelayMs(){return this._execEvenlyMinDelayMs}set execEvenlyMinDelayMs(e){this._execEvenlyMinDelayMs=void 0===e?Math.ceil(this.msDuration/this.points):e}get keyPrefix(){return this._keyPrefix}set keyPrefix(e){if(void 0===e&&(e="rlflx"),"string"!=typeof e)throw Error("keyPrefix must be string");this._keyPrefix=e}_getKeySecDuration(e={}){return e&&e.customDuration>=0?e.customDuration:this.duration}getKey(e){return this.keyPrefix.length>0?`${this.keyPrefix}:${e}`:e}parseKey(e){return e.substring(this.keyPrefix.length)}consume(){throw Error("You have to implement the method 'consume'!")}penalty(){throw Error("You have to implement the method 'penalty'!")}reward(){throw Error("You have to implement the method 'reward'!")}get(){throw Error("You have to implement the method 'get'!")}set(){throw Error("You have to implement the method 'set'!")}block(){throw Error("You have to implement the method 'block'!")}delete(){throw Error("You have to implement the method 'delete'!")}}},86244:e=>{e.exports=class extends Error{constructor(e,t){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="CustomError",this.message=e,t&&(this.extra=t)}}},87724:(e,t,i)=>{let r=i(79073);e.exports=class{constructor(...e){if(e.length<1)throw Error("RateLimiterUnion: at least one limiter have to be passed");e.forEach(e=>{if(!(e instanceof r))throw Error("RateLimiterUnion: all limiters have to be instance of RateLimiterAbstract")}),this._limiters=e}consume(e,t=1){return new Promise((i,r)=>{let s=[];this._limiters.forEach(i=>{s.push(i.consume(e,t).catch(e=>({rejected:!0,rej:e})))}),Promise.all(s).then(e=>{let t={},s=!1;e.forEach(e=>{!0===e.rejected&&(s=!0)});for(let i=0;i<e.length;i++)s&&!0===e[i].rejected?t[this._limiters[i].keyPrefix]=e[i].rej:s||(t[this._limiters[i].keyPrefix]=e[i]);s?r(t):i(t)})})}}},89364:(e,t,i)=>{let r=i(95484),s=i(7193);class n extends r{constructor(e,t=null){super(e),this.client=e.storeClient,this.clientType=e.storeType,this.tableName=e.tableName,this.schemaName=e.schemaName,this.clearExpiredByTimeout=e.clearExpiredByTimeout,this.tableCreated=e.tableCreated,this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof t&&t()):this._createTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),"function"==typeof t&&t()}).catch(e=>{if("function"==typeof t)t(e);else throw e})}_getTableIdentifier(){return this.schemaName?`"${this.schemaName}"."${this.tableName}"`:`"${this.tableName}"`}clearExpired(e){return new Promise(t=>{let i={name:"rlflx-clear-expired",text:`DELETE FROM ${this._getTableIdentifier()} WHERE expire < $1`,values:[e]};this._query(i).then(()=>{t()}).catch(()=>{t()})})}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>{this._clearExpiredHourAgo()})},3e5),this._clearExpiredTimeoutId.unref()}_getConnection(){switch(this.clientType){case"pool":default:return Promise.resolve(this.client);case"sequelize":return this.client.connectionManager.getConnection();case"knex":return this.client.client.acquireConnection();case"typeorm":return Promise.resolve(this.client.driver.master)}}_releaseConnection(e){switch(this.clientType){case"pool":case"typeorm":default:return!0;case"sequelize":return this.client.connectionManager.releaseConnection(e);case"knex":return this.client.client.releaseConnection(e)}}_createTable(){return new Promise((e,t)=>{this._query({text:this._getCreateTableStmt()}).then(()=>{e()}).catch(i=>{"23505"===i.code?e():t(i)})})}_getCreateTableStmt(){return`CREATE TABLE IF NOT EXISTS ${this._getTableIdentifier()} (
      key varchar(255) PRIMARY KEY,
      points integer NOT NULL DEFAULT 0,
      expire bigint
    );`}get clientType(){return this._clientType}set clientType(e){let t=this.client.constructor.name;if(void 0===e)if("Client"===t)e="client";else if("Pool"===t||"BoundPool"===t)e="pool";else if("Sequelize"===t)e="sequelize";else throw Error("storeType is not defined");this._clientType=e.toLowerCase()}get tableName(){return this._tableName}set tableName(e){this._tableName=void 0===e?this.keyPrefix:e}get schemaName(){return this._schemaName}set schemaName(e){this._schemaName=e}get tableCreated(){return this._tableCreated}set tableCreated(e){this._tableCreated=void 0!==e&&!!e}get clearExpiredByTimeout(){return this._clearExpiredByTimeout}set clearExpiredByTimeout(e){this._clearExpiredByTimeout=void 0===e||!!e}_getRateLimiterRes(e,t,i){let r=new s,n=i.rows[0];return r.isFirstInDuration=t===n.points,r.consumedPoints=r.isFirstInDuration?t:n.points,r.remainingPoints=Math.max(this.points-r.consumedPoints,0),r.msBeforeNext=n.expire?Math.max(n.expire-Date.now(),0):-1,r}_query(e){let t=this.tableName.toLowerCase(),i={name:`${t}:${e.name}`,text:e.text,values:e.values};return new Promise((e,t)=>{this._getConnection().then(r=>{r.query(i).then(t=>{e(t),this._releaseConnection(r)}).catch(e=>{t(e),this._releaseConnection(r)})}).catch(e=>{t(e)})})}_upsert(e,t,i,r=!1){if(!this.tableCreated)return Promise.reject(Error("Table is not created yet"));let s=i>0?Date.now()+i:null,n=r?" $3 ":` CASE
             WHEN ${this._getTableIdentifier()}.expire <= $4 THEN $3
             ELSE ${this._getTableIdentifier()}.expire
            END `;return this._query({name:r?"rlflx-upsert-force":"rlflx-upsert",text:`
            INSERT INTO ${this._getTableIdentifier()} VALUES ($1, $2, $3)
              ON CONFLICT(key) DO UPDATE SET
                points = CASE
                          WHEN (${this._getTableIdentifier()}.expire <= $4 OR 1=${+!!r}) THEN $2
                          ELSE ${this._getTableIdentifier()}.points + ($2)
                         END,
                expire = ${n}
            RETURNING points, expire;`,values:[e,t,s,Date.now()]})}_get(e){return this.tableCreated?new Promise((t,i)=>{this._query({name:"rlflx-get",text:`
            SELECT points, expire FROM ${this._getTableIdentifier()} WHERE key = $1 AND (expire > $2 OR expire IS NULL);`,values:[e,Date.now()]}).then(e=>{0===e.rowCount&&(e=null),t(e)}).catch(e=>{i(e)})}):Promise.reject(Error("Table is not created yet"))}_delete(e){return this.tableCreated?this._query({name:"rlflx-delete",text:`DELETE FROM ${this._getTableIdentifier()} WHERE key = $1`,values:[e]}).then(e=>e.rowCount>0):Promise.reject(Error("Table is not created yet"))}}e.exports=n},95484:(e,t,i)=>{let r=i(79073),s=i(23898),n=i(7193);e.exports=class extends r{constructor(e={}){super(e),this.inMemoryBlockOnConsumed=e.inMemoryBlockOnConsumed,this.inMemoryBlockDuration=e.inMemoryBlockDuration,this.insuranceLimiter=e.insuranceLimiter,this._inMemoryBlockedKeys=new s}get client(){return this._client}set client(e){if(void 0===e)throw Error("storeClient is not set");this._client=e}_afterConsume(e,t,i,r,s,n={}){let o=this._getRateLimiterRes(i,r,s);if(this.inMemoryBlockOnConsumed>0&&!(this.inMemoryBlockDuration>0)&&o.consumedPoints>=this.inMemoryBlockOnConsumed)return(this._inMemoryBlockedKeys.addMs(i,o.msBeforeNext),o.consumedPoints>this.points)?t(o):e(o);if(o.consumedPoints>this.points){let e=Promise.resolve();this.blockDuration>0&&o.consumedPoints<=this.points+r&&(o.msBeforeNext=this.msBlockDuration,e=this._block(i,o.consumedPoints,this.msBlockDuration,n)),this.inMemoryBlockOnConsumed>0&&o.consumedPoints>=this.inMemoryBlockOnConsumed&&(this._inMemoryBlockedKeys.add(i,this.inMemoryBlockDuration),o.msBeforeNext=this.msInMemoryBlockDuration),e.then(()=>{t(o)}).catch(e=>{t(e)})}else if(this.execEvenly&&o.msBeforeNext>0&&!o.isFirstInDuration){let t=Math.ceil(o.msBeforeNext/(o.remainingPoints+2));t<this.execEvenlyMinDelayMs&&(t=o.consumedPoints*this.execEvenlyMinDelayMs),setTimeout(e,t,o)}else e(o)}_handleError(e,t,i,s,n,o=!1,a={}){this.insuranceLimiter instanceof r?this.insuranceLimiter[t](n,o,a).then(e=>{i(e)}).catch(e=>{s(e)}):s(e)}getInMemoryBlockMsBeforeExpire(e){return this.inMemoryBlockOnConsumed>0?this._inMemoryBlockedKeys.msBeforeExpire(e):0}get inMemoryBlockOnConsumed(){return this._inMemoryBlockOnConsumed}set inMemoryBlockOnConsumed(e){if(this._inMemoryBlockOnConsumed=e?parseInt(e):0,this.inMemoryBlockOnConsumed>0&&this.points>this.inMemoryBlockOnConsumed)throw Error('inMemoryBlockOnConsumed option must be greater or equal "points" option')}get inMemoryBlockDuration(){return this._inMemoryBlockDuration}set inMemoryBlockDuration(e){if(this._inMemoryBlockDuration=e?parseInt(e):0,this.inMemoryBlockDuration>0&&0===this.inMemoryBlockOnConsumed)throw Error("inMemoryBlockOnConsumed option must be set up")}get msInMemoryBlockDuration(){return 1e3*this._inMemoryBlockDuration}get insuranceLimiter(){return this._insuranceLimiter}set insuranceLimiter(e){if(void 0!==e&&!(e instanceof r))throw Error("insuranceLimiter must be instance of RateLimiterAbstract");this._insuranceLimiter=e,this._insuranceLimiter&&(this._insuranceLimiter.blockDuration=this.blockDuration,this._insuranceLimiter.execEvenly=this.execEvenly)}block(e,t,i={}){return this._block(this.getKey(e),this.points+1,1e3*t,i)}set(e,t,i,r={}){let s=(i>=0?i:this.duration)*1e3;return this._block(this.getKey(e),t,s,r)}consume(e,t=1,i={}){return new Promise((r,s)=>{let o=this.getKey(e),a=this.getInMemoryBlockMsBeforeExpire(o);if(a>0)return s(new n(0,a));this._upsert(o,t,1e3*this._getKeySecDuration(i),!1,i).then(e=>{this._afterConsume(r,s,o,t,e)}).catch(n=>{this._handleError(n,"consume",r,s,e,t,i)})})}penalty(e,t=1,i={}){let r=this.getKey(e);return new Promise((s,n)=>{this._upsert(r,t,1e3*this._getKeySecDuration(i),!1,i).then(e=>{s(this._getRateLimiterRes(r,t,e))}).catch(r=>{this._handleError(r,"penalty",s,n,e,t,i)})})}reward(e,t=1,i={}){let r=this.getKey(e);return new Promise((s,n)=>{this._upsert(r,-t,1e3*this._getKeySecDuration(i),!1,i).then(e=>{s(this._getRateLimiterRes(r,-t,e))}).catch(r=>{this._handleError(r,"reward",s,n,e,t,i)})})}get(e,t={}){let i=this.getKey(e);return new Promise((r,s)=>{this._get(i,t).then(e=>{null==e?r(null):r(this._getRateLimiterRes(i,0,e))}).catch(i=>{this._handleError(i,"get",r,s,e,t)})})}delete(e,t={}){let i=this.getKey(e);return new Promise((r,s)=>{this._delete(i,t).then(e=>{this._inMemoryBlockedKeys.delete(i),r(e)}).catch(i=>{this._handleError(i,"delete",r,s,e,t)})})}deleteInMemoryBlockedAll(){this._inMemoryBlockedKeys.delete()}_getRateLimiterRes(e,t,i){throw Error("You have to implement the method '_getRateLimiterRes'!")}_block(e,t,i,r={}){return new Promise((s,o)=>{this._upsert(e,t,i,!0,r).then(()=>{s(new n(0,i>0?i:-1,t))}).catch(t=>{this._handleError(t,"block",s,o,this.parseKey(e),i/1e3,r)})})}_get(e,t={}){throw Error("You have to implement the method '_get'!")}_delete(e,t={}){throw Error("You have to implement the method '_delete'!")}_upsert(e,t,i,r=!1,s={}){throw Error("You have to implement the method '_upsert'!")}}},95654:(e,t,i)=>{let r=i(95484),s=i(7193);class n extends r{constructor(e){super(e),this.client=e.storeClient}_getRateLimiterRes(e,t,i){let r=new s;return r.consumedPoints=parseInt(i.consumedPoints),r.isFirstInDuration=i.consumedPoints===t,r.remainingPoints=Math.max(this.points-r.consumedPoints,0),r.msBeforeNext=i.msBeforeNext,r}_upsert(e,t,i,r=!1,s={}){return new Promise((n,o)=>{let a=Date.now(),l=Math.floor(i/1e3);r?this.client.set(e,t,l,i=>{i?o(i):this.client.set(`${e}_expire`,l>0?a+1e3*l:-1,l,()=>{n({consumedPoints:t,msBeforeNext:l>0?1e3*l:-1})})}):this.client.incr(e,t,(c,h)=>{c||!1===h?this.client.add(e,t,l,(c,h)=>{if(c||!h)if(void 0===s.attemptNumber||s.attemptNumber<3){let a=Object.assign({},s);a.attemptNumber=a.attemptNumber?a.attemptNumber+1:1,this._upsert(e,t,i,r,a).then(e=>n(e)).catch(e=>o(e))}else o(Error("Can not add key"));else this.client.add(`${e}_expire`,l>0?a+1e3*l:-1,l,()=>{n({consumedPoints:t,msBeforeNext:l>0?1e3*l:-1})})}):this.client.get(`${e}_expire`,(e,t)=>{if(e)o(e);else{let e=!1===t?0:t;n({consumedPoints:h,msBeforeNext:e>=0?Math.max(e-a,0):-1})}})})})}_get(e){return new Promise((t,i)=>{let r=Date.now();this.client.get(e,(s,n)=>{n?this.client.get(`${e}_expire`,(e,s)=>{if(e)i(e);else{let e=!1===s?0:s;t({consumedPoints:n,msBeforeNext:e>=0?Math.max(e-r,0):-1})}}):t(null)})})}_delete(e){return new Promise((t,i)=>{this.client.del(e,(r,s)=>{r?i(r):!1===s?t(s):this.client.del(`${e}_expire`,e=>{e?i(e):t(s)})})})}}e.exports=n},95734:e=>{e.exports=class{constructor(){this._keys={},this._addedKeysAmount=0}collectExpired(){let e=Date.now();Object.keys(this._keys).forEach(t=>{this._keys[t]<=e&&delete this._keys[t]}),this._addedKeysAmount=Object.keys(this._keys).length}add(e,t){this.addMs(e,1e3*t)}addMs(e,t){this._keys[e]=Date.now()+t,this._addedKeysAmount++,this._addedKeysAmount>999&&this.collectExpired()}msBeforeExpire(e){let t=this._keys[e];if(t&&t>=Date.now()){this.collectExpired();let e=Date.now();return t>=e?t-e:0}return 0}delete(e){e?delete this._keys[e]:Object.keys(this._keys).forEach(e=>{delete this._keys[e]})}}},98777:(e,t,i)=>{let r=i(73856),s=i(62527);class n extends s{async _upsert(e,t,i,s=!1){let n,o=i>0?Date.now()+i:null,a={points:t,expire:o};if(s)await this.client.put(e).value(JSON.stringify(a));else if(!await this.client.if(e,"Version","===","0").then(this.client.put(e).value(JSON.stringify(a))).commit().then(e=>!!e.succeeded)){let i=!1;for(let r=0;r<5&&(a={points:(n=await this._get(e)).points+t,expire:o},!(i=await this.client.if(e,"Value","===",JSON.stringify(n)).then(this.client.put(e).value(JSON.stringify(a))).commit().then(e=>!!e.succeeded)));r++);if(!i)throw new r("Could not set new value in a transaction.")}return a}}e.exports=n},98836:(e,t,i)=>{let r=i(86244),s="limiter";e.exports=class{constructor(e,t={maxQueueSize:0xffffffff}){this._queueLimiters={KEY_DEFAULT:new n(e,t)},this._limiterFlexible=e,this._maxQueueSize=t.maxQueueSize}getTokensRemaining(e=s){return this._queueLimiters[e]?this._queueLimiters[e].getTokensRemaining():Promise.resolve(this._limiterFlexible.points)}removeTokens(e,t=s){return this._queueLimiters[t]||(this._queueLimiters[t]=new n(this._limiterFlexible,{key:t,maxQueueSize:this._maxQueueSize})),this._queueLimiters[t].removeTokens(e)}};class n{constructor(e,t={maxQueueSize:0xffffffff,key:s}){this._key=t.key,this._waitTimeout=null,this._queue=[],this._limiterFlexible=e,this._maxQueueSize=t.maxQueueSize}getTokensRemaining(){return this._limiterFlexible.get(this._key).then(e=>null!==e?e.remainingPoints:this._limiterFlexible.points)}removeTokens(e){let t=this;return new Promise((i,s)=>{if(e>t._limiterFlexible.points)return void s(new r(`Requested tokens ${e} exceeds maximum ${t._limiterFlexible.points} tokens per interval`));t._queue.length>0?t._queueRequest.call(t,i,s,e):t._limiterFlexible.consume(t._key,e).then(e=>{i(e.remainingPoints)}).catch(r=>{r instanceof Error?s(r):(t._queueRequest.call(t,i,s,e),null===t._waitTimeout&&(t._waitTimeout=setTimeout(t._processFIFO.bind(t),r.msBeforeNext)))})})}_queueRequest(e,t,i){this._queue.length<this._maxQueueSize?this._queue.push({resolve:e,reject:t,tokens:i}):t(new r(`Number of requests reached it's maximum ${this._maxQueueSize}`))}_processFIFO(){let e=this;if(null!==e._waitTimeout&&(clearTimeout(e._waitTimeout),e._waitTimeout=null),0===e._queue.length)return;let t=e._queue.shift();e._limiterFlexible.consume(e._key,t.tokens).then(i=>{t.resolve(i.remainingPoints),e._processFIFO.call(e)}).catch(i=>{i instanceof Error?(t.reject(i),e._processFIFO.call(e)):(e._queue.unshift(t),null===e._waitTimeout&&(e._waitTimeout=setTimeout(e._processFIFO.bind(e),i.msBeforeNext)))})}}}};